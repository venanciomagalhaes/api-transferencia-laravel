services:
    app:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www/html
            - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - desafio-api-transferencia-simplificada
        depends_on:
            mysql:
                condition: service_healthy
            mysql-test:
                condition: service_healthy
            redis:
                condition: service_healthy
        command: ["/bin/sh", "./docker/scripts/entrypoint.sh"]

    nginx:
        restart: always
        image: nginx:latest
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./:/var/www/html
        ports:
            - "6789:80"
        depends_on:
            - app
        networks:
            - desafio-api-transferencia-simplificada

    mysql:
        restart: always
        image: mysql:8.0
        volumes:
            - mysql_data:/var/lib/mysql
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
        ports:
            - "3323:3306"
        networks:
            - desafio-api-transferencia-simplificada
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DB_PASSWORD}"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 20s

    mysql-test:
        restart: always
        image: mysql:8.0
        volumes:
            - mysql_data_test:/var/lib/mysql
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
        ports:
            - "3324:3306"
        networks:
            - desafio-api-transferencia-simplificada
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DB_PASSWORD}" ]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 20s

    redis:
        image: redis:7.2-alpine
        restart: always
        command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
        env_file:
            - .env
        volumes:
            - redis_data:/data
        networks:
            - desafio-api-transferencia-simplificada
        healthcheck:
            test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 20s

    queue:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www/html
        networks:
            - desafio-api-transferencia-simplificada
        depends_on:
            - app
            - mysql
            - redis
        command: ["php", "artisan", "queue:work", "--tries=3", "--timeout=90", "--sleep=3"]
        healthcheck:
            test: ["CMD", "pgrep", "php"]
            interval: 30s
            timeout: 10s
            retries: 3

    scheduler:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www/html
        depends_on:
            - app
            - mysql
            - redis
        networks:
            - desafio-api-transferencia-simplificada
        command: ["/bin/sh", "./docker/scripts/schedule.sh"]
        healthcheck:
            test: ["CMD", "pgrep", "php"]
            interval: 30s
            timeout: 10s
            retries: 3

volumes:
    mysql_data:
    mysql_data_test:
    redis_data:

networks:
    desafio-api-transferencia-simplificada:
        driver: bridge
